{
  "private": true,
  "devEngines": {
    "node": "6.x || 7.x || 8.x || 9.x",
    "npm": "5.x"
  },
  "devDependencies": {
    "babel-core": "^6.24.0",
    "babel-eslint": "^8.2.2",
    "babel-jest": "^20.0.3 ",
    "babel-loader": "^7.1.0",
    "babel-plugin-export-default-module-exports": "^0.0.4",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-rax": "^0.6.0",
    "chalk": "^1.1.3",
    "chokidar": "^1.6.1",
    "codecov": "^1.0.1",
    "conventional-commit-types": "^2.1.0",
    "cz-conventional-changelog": "^1.2.0",
    "eslint": "^4.18.1",
    "eslint-plugin-import": "^2.9.0",
    "eslint-plugin-react": "^7.7.0",
    "findup": "^0.1.5",
    "ghooks": "^1.3.2",
    "glob": "^7.1.1",
    "image-size": "^0.5.1",
    "istanbul-api": "^1.0.0-aplha.10",
    "istanbul-lib-coverage": "^1.0.0",
    "jest": "^20.0.4",
    "jest-localstorage-mock": "^2.2.0",
    "lerna": "2.0.0",
    "minimatch": "^3.0.3",
    "minimist": "^1.2.0",
    "rax-webpack-plugin": "^0.6.0",
    "redux": "^3.6.0",
    "rimraf": "^2.5.4",
    "semver-regex": "^1.0.0",
    "uglifyjs-webpack-plugin": "^1.2.2",
    "uppercamelcase": "^1.1.0",
    "webpack": "^4.0.1",
    "webpack-dev-server": "^3.1.0",
    "worker-loader": "^1.1.1"
  },
  "peerDependencies": {
    "redux": "latest",
    "driver-webgl": "latest",
    "rax": "latest",
    "rax-refreshcontrol": "latest",
    "rax-view": "latest",
    "rax-video": "latest",
    "rax-canvas": "latest",
    "rax-charts": "latest",
    "rax-text": "latest",
    "rax-icon": "latest",
    "rax-image": "latest",
    "rax-slider": "latest",
    "rax-countdown": "latest",
    "rax-navigation": "latest",
    "rax-animated": "latest",
    "rax-modal": "latest",
    "rax-touchable": "latest",
    "rax-button": "latest",
    "rax-calendar": "latest",
    "rax-checkbox": "latest",
    "rax-gotop": "latest",
    "rax-link": "latest",
    "rax-grid": "latest",
    "rax-multirow": "latest",
    "rax-picture": "latest",
    "rax-redux": "latest",
    "rax-player": "latest",
    "rax-scrollview": "latest",
    "rax-recyclerview": "latest",
    "rax-waterfall": "latest",
    "rax-switch": "latest",
    "rax-tabbar": "latest",
    "rax-tabheader": "latest",
    "rax-textinput": "latest",
    "rax-listview": "latest",
    "rax-tab-panel": "latest",
    "rax-parallax": "latest",
    "universal-env": "latest",
    "universal-easing": "latest",
    "universal-jsonp": "latest",
    "universal-panresponder": "latest",
    "universal-perf": "latest",
    "universal-platform": "latest",
    "universal-stylesheet": "latest",
    "universal-toast": "latest",
    "universal-transition": "latest"
  },
  "scripts": {
    "link": "node ./scripts/link.js && npm run build:compile && npm run build:dist",
    "bootstrap": "lerna bootstrap",
    "setup": "npm run bootstrap && npm run link",
    "build:templates": "node ./scripts/build-templates.js",
    "build:compile": "npm run clean:compile && node ./scripts/compile.js",
    "build:dist": "npm run clean:dist && node ./scripts/dist.js",
    "build:examples": "node ./scripts/build-examples.js",
    "build": "npm run build:compile && npm run build:dist && npm run build:examples && npm run build:templates",
    "watch:compile": "node ./scripts/compile.js --watch",
    "test": "jest",
    "start": "npm run build:compile && node ./scripts/start.js",
    "lint": "npm run lint:nofix -- --fix",
    "lint:nofix": "eslint --ext .js --ext .jsx ./",
    "coverage": "npm run test -- --coverage",
    "coverage:upload": "npm run clean:coverage && npm run coverage && node ./scripts/mapCoverage.js && codecov",
    "publish": "node ./scripts/publish.js",
    "clean:dist": "rm -rf ./packages/*/dist",
    "clean:compile": "rm -rf ./packages/*/lib",
    "clean:coverage": "rm -rf ./coverage",
    "clean:modules": "rm -rf ./packages/*/node_modules",
    "clean": "npm run clean:modules & npm run clean:compile & npm run clean:dist & npm run clean:coverage",
    "clear": "git clean -xfd"
  },
  "jest": {
    "collectCoverage": true,
    "verbose": true,
    "setupFiles": [
      "./scripts/jest.js",
      "jest-localstorage-mock"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/fixtures/",
      "/__modules__/",
      "/__files__/",
      "/lib/",
      "/dist/"
    ]
  },
  "config": {
    "ghooks": {
      "commit-msg": "./scripts/validate-commit-msg.js"
    },
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}